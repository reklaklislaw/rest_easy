import internetarchive.def

+doc: |
  The Internet Archive is a 501(c)(3) non-profit that was founded to build an 
  Internet library. Its purposes include offering permanent access for 
  researchers, historians, scholars, people with disabilities, and the general 
  public to historical collections that exist in digital format.

  Founded in 1996 and located in San Francisco, the Archive has been receiving 
  data donations from Alexa Internet and others. In late 1999, the organization 
  started to grow to include more well-rounded collections. Now the 
  Internet Archive includes: texts, audio, moving images, and software as well 
  as archived web pages in our collections, and provides specialized services 
  for adaptive reading and information access for the blind and other persons 
  with disabilities. 

+hostname: 'archive.org'
+protocol: https
+port: 443

+children:
  identifier: 
    <<: *identifier
    +mode: V

  Download:
    +http_method: GET
    +path: '/download/{identifier}/{0}'
    +input_format: key_value
    +output_format: 
      [*application,
      *audio,
      *image, 
      *message,
      *model,
      *multipart,
      *text,
      *video]
    +this: 
      +mode: V
      +key: Null
      +expected_value: str

  MetadataRead:
    +http_method: GET
    +path: '/metadata/{identifier}{/element}?{start}{count}'
    +input_format: key_value
    +output_format: application/json
    +this: 
      +mode: K
      +key: ''
      +expected_value: Null
    +children:
      element: *element
      start: *std-start
      count: *std-count

  MetadataWrite:
    +http_method: POST
    +path: '/metadata/{identifier}'
    +input_format: key_value
    +output_format: application/json
    +children:
      target: *target
      patch: *patch
      access: *access
      secret: *secret

---

+namespace: 's3'

+hostname: 's3.us.archive.org'
+protocol: http
+port: 80

+children:
  auth:
    +mode: body
    +prefix: 'authorization: LOW '
    +syntax:
      +bind: ':'
    +children:
      access: 
        <<: *access
        +mode: body
        +key: Null
      secret: 
        <<: *secret
        +mode: body
        +key: Null

  identifier: 
    <<: *identifier
    +mode: V

  Upload:
    +http_method: PUT
    +path: '/{identifier}'
    +input_format: key_value
    +output_format: application/json
    +this:
      +mode: body+file
      +key: 'file'
      +expected_value: str
    +children:
      metaTag: *metatag
      autoMake: *automake
      eraseOld: *eraseold
      keepOld: *keepold
      sizeHint: *sizehint
      priority: *priority
      simulateError: *simulateerror
